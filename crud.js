/*
 * Використовуємо сервіс https://mockapi.io/ для створення бекенду
 */

/*
 * Read (GET)
 */

/*
 * Create (POST)
 */

/*
    method: "POST", - описує HTTP метод який зараз буде передаватись
    body: JSON.stringify(book), - описує тіло запиту, тобто ті дані які ми хочемо передати на сервер (у фрматі JSON)
    headers: { - список заголовків, тобто технічної інфонмації
      "Content-Type": "application/json", - один з заголовків який вказує тип контенту який ми передаємо на сервер, список усіх MIME типів можна вивчити за наступним посиланням: 
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
    },

    Список всіх можливих заголовків: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers 
  */

// {
//   title: 'Тестова книга з CSS',
//   author: 'Я',
//   genres: ['CSS'],
//   rating: 9,
// }

/*
 * Update (PUT/PATCH)
 */

/*
в базі є обʼєкт:
{
    title: "Тестова книга з CSS",
    author: "Я",
    genres: ["CSS"],
    rating: 9,
    id: "1"
}
ці два методи оновлюють вже існуючі дані на сервері

* PUT - повне оновлення даних (також цей метод може створити дані на сервері якщо їх не було, наприклад, коли ви намагаєтесь оновити неіснуючі дані)
body: {
  title: "Оновлена тестова книга по CSS",
  author: "Оновлений автор я"
}

Отримаємо наступну відповідь від серверу:

{
  title: "Оновлена тестова книга по CSS",
  author: "Оновлений автор я",
  id: "1"
}


* PATCH - часткове оновлення даних
body: {
  title: "Оновлена тестова книга по CSS",
  author: "Оновлений автор я"
}

Отримаємо наступну відповідь від серверу:

{
  title: "Оновлена тестова книга по CSS",
  author: "Оновлений автор я",
  genres: ["CSS"],
  rating: 9,
  id: "1"
}
*/

/*
 * Delete (DELETE)
 */
